@using System.Globalization

<ContentControl Tag="@("Shapes")">
    <Grid RowDefinitions="@(new("Auto,*"))">
        <Slider Grid.Row="0" @bind-Value="_value" Maximum="20" />

        <ScrollViewer Grid.Row="1">
            <StackPanel Margin="new(10)" Spacing="20">

                <Label>Filled ellipse</Label>
                <Ellipse Fill="Brushes.Coral"
                         Width="EllipseWidth"
                         Height="50" />

                <Label>Red cirle</Label>
                <Ellipse Stroke="Brushes.Red"
                         StrokeThickness="CircleThickness"
                         Width="150"
                         Height="150" />


                <Label>Blue diagonal line</Label>
                <Line StartPoint="new(0,0)" EndPoint="new(0,120)"
                      Stroke="Brushes.DarkBlue"
                      StrokeDashArray="new(1,1)"
                      StrokeDashOffset="6" />

                @* <Label>Polygon that uses the Nonzero fill rule</Label>
                <Polygon Points="@(new("0,48 0,144 96,150 100,0 192,0 192,96 50,96 48,192 150,200 144,48"))"
                         Fill="Brushes.Black"
                         UseLayoutRounding="false"
                         Stroke="Brushes.Yellow"
                         StrokeThickness="PolygonThickness" />


                <Label>Dashed polyline</Label>
                <Polyline Points=@(new($"0,0 10,30 15,0 18,60 23,30 35,30 40,0 43,60 48,30 {PolylinePoint},30"))
                          Stroke="Brushes.Red"
                          StrokeThickness="2"
                          StrokeDashArray="1,1"
                          StrokeDashOffset="6" /> *@

                <Label>Rectangle with gradient fill</Label>
                <Rectangle RadiusX="50"
                           RadiusY="10"
                           Width="200"
                           Height="100"
                           Fill="new RadialGradientBrush() { Radius=0.5, GradientStops = [new GradientStop(Colors.DarkBlue, 0), new GradientStop(Colors.Red, GradientOffset) ] }">
                    @* <Fill>
                        <RadialGradientBrush Radius="0.5">
                            <GradientStop Color="Brushes.DarkBlue" Offset="0" />
                            <GradientStop Color="Brushes.Red" Offset="GradientOffset" />
                        </RadialGradientBrush>
                    </Fill> *@
                </Rectangle>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</ContentControl>

@code {
double? _value = 10;

string PolylinePoint => (100 + 5 * _value.Value).ToString(CultureInfo.InvariantCulture);
float GradientOffset => (float)(0.5 + _value / 10);
double? PolygonThickness => 3 + _value;
double? LineX1 => 40 + 5 * _value;
double? CircleThickness => 4 + _value / 5;
double? EllipseWidth => 150 + _value;
}
