<ContentControl Tag="@("Error boundaries")">
    <StackPanel Margin="new(8)" Spacing="6">

        <Border BorderBrush="Brushes.Black" BorderThickness="new(1)" Padding="new(6)">
            <StackPanel>
                <Label>Inside of Local Error Boundary</Label>

                <ErrorBoundary @ref="errorBoundary">
                    <ChildContent>
                        <Button OnClick="ThrowException">Throw</Button>
                    </ChildContent>

                    <ErrorContent>
                        <Label>Exception '@context.Message' is handled by the local ErrorBoundary.</Label>
                        <Button OnClick="Recover">Recover</Button>
                    </ErrorContent>
                </ErrorBoundary>

            </StackPanel>
        </Border>

        <Label>Outside of local Error Boundary</Label>
        <Button OnClick="ThrowException">Throw</Button>

        @if (ShowNavigation)
        {
            <Label>Navigations</Label>
            <Button OnClick="PushToStack">Open page</Button>
            <Button OnClick="PushModal">Open modal</Button>
        }
    </StackPanel>
</ContentControl>

@code {
    [Parameter] public bool ShowNavigation { get; set; } = true;

    [Inject] INavigation Navigation { get; set; }

    ErrorBoundary errorBoundary;

    void Recover()
    {
        errorBoundary.Recover();
    }

    void ThrowException()
    {
        throw new InvalidOperationException("Something unxepected happened.");
    }

    async Task PushToStack()
    {
        await Navigation.PushAsync(@<ErrorBoundariesPage ShowNavigation="false" />);
    }

    async Task PushModal()
    {
        await Navigation.PushModalAsync(@<ErrorBoundariesPage ShowNavigation="false" />);
    }
}
