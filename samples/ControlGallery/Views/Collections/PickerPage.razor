@using ControlGallery.Models
@using System.Diagnostics

@page "/pickerplayground"

<ContentControl Tag="Pickers">
    <ScrollViewer>
        <StackPanel Padding="10">
            <Label Text="Picker Playground" FontSize="30">
            </Label>

            <Border Height="2" Background="Brushes.Gray" HorizontalAlignment="HorizontalAlignment.Stretch" />

            <Label Padding="5" FontAttributes="FontAttributes.Bold" Text="Picker with models and all display properties" />
            <ComboBox Attached="@((ComboBox c) => c.TextElementFontWeight(FontStyle.Oblique))"
                    FontFamily="MarkerFelt-Thin"
                    FontSize="20"
                    HorizontalAlignment="HorizontalAlignment.Center"
                    Foreground="Brushes.Red"
                    ItemsSource="Models"
                    PlaceholderText="Select a model"
                    
                    VerticalContentAlignment="VerticalAlignment.End"
                    @bind-SelectedItem="SelectedModel">
            </ComboBox>
            <Label Padding="5">Selected model: @(SelectedModel?.Name ?? "(none)")</Label>

            <Border Height="2" Background="Brushes.Gray" HorizontalAlignment="HorizontalAlignment.Stretch" />

            <Label Attached="(Label l) => l.TextElementFontWeight(FontWeight.Bold)">Picker with string</Label>
            <ComboBox @bind-SelectedItem="SelectedString"
                    PlaceholderText="Select a string"
                    ItemsSource="Strings" />
            <Label>Selected string: @(SelectedString ?? "(none)")</Label>

            <Border Height="2" Background="Brushes.Gray" HorizontalAlignment="LayoutOptions.Fill" />

            <Label Attached="(Label l) => l.TextElementFontWeight(FontWeight.Bold)">Picker with models and default item selected</Label>
            <ComboBox @bind-SelectedItem="SelectedModelDefault"
                    PlaceholderText="Select a model"
                    
                    ItemsSource="ModelsWithDefault" />
            <Label>Selected model: @(SelectedModelDefault?.Name ?? "(none)")</Label>

            <Border Height="2" Background="Brushes.Gray" HorizontalAlignment="HorizontalAlignment.Stretch" />

            <Label FontAttributes="FontAttributes.Bold" Text="Index Based Picker" />
            <ComboBox ItemsSource="Models"
                    PlaceholderText="Select a model and the index will bind"
                    @bind-SelectedIndex="SelectedIndex">
            </ComboBox>
            <Label Text="@("Selected model: " + Models.ElementAtOrDefault(SelectedIndex)?.Name ?? "(none)")"></Label>

            <Button Padding="20" OnClick="ButtonClicked">Set pickers from code</Button>
        </StackPanel>
    </ScrollViewer>
</ContentControl>

@code
{
    public PickerModel SelectedModel { get; set; }

    public int SelectedIndex { get; set; } = -1;

    public List<PickerModel> Models { get; set; } =
    [
        new PickerModel { Name = "Model 1" },
        new PickerModel { Name = "Model 2" },
        new PickerModel { Name = "Model 3" },
    ];

    public string SelectedString { get; set; }

    public List<string> Strings { get; set; } =
    [
        "String 1",
        "String 2",
        "String 3",
    ];

    static PickerModel defaultModel = new PickerModel { Name = "Default Model" };
    public PickerModel SelectedModelDefault { get; set; } = defaultModel;

    public List<PickerModel> ModelsWithDefault { get; set; } =
    [
        new PickerModel{Name = "Model 1"},
        new PickerModel{Name = "Model 2"},
        defaultModel,
        new PickerModel{Name = "Model 3"},
    ];

    public void ButtonClicked()
    {
        SelectedModel = Models.LastOrDefault();
        SelectedString = Strings.LastOrDefault();
        SelectedModelDefault = ModelsWithDefault.LastOrDefault();
        SelectedIndex = -1;
    }

    public string ItemDisplay(PickerModel model)
    {
        return $"❤️{model.Name}❤️";
    }
}
