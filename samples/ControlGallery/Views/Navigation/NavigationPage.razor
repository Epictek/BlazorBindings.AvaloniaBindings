@page "/navigation"

@using ControlGallery.Models

@inject INavigation Navigation

<ContentControl Tag="Navigation">
    <ScrollViewer>
        <StackPanel Margin="new(6)" Spacing="6">
            <Label>Passed item</Label>
            <Label>Name: @item.Name, Value: @item.Value</Label>

            @if (eventHappenedTimes > 0)
            {
                <Label>Event happened @eventHappenedTimes times!</Label>
            }

            <Button OnClick="NavigateNoParameter">Navigate with no parameters</Button>
            <Button OnClick="NavigateWithItem">Navigate with item passed</Button>
            <Button OnClick="NavigateWithEvent">Navigate with event handler</Button>
            <Button OnClick="NavigateToModal">Navigate to modal</Button>
            <Button OnClick="NavigateViaRenderFragment">Navigate via markup parameter with event</Button>
            <Button OnClick="NavigateViaRenderFragmentWithBind">Navigate via markup parameter with binding</Button>
            <Button OnClick="NavigateToModalViaRenderFragment">Navigate to modal via markup parameter</Button>
        </StackPanel>
    </ScrollViewer>
</ContentControl>

@code {
    NavigationParameterModel item = new("Firefly", "Serenity");
    int eventHappenedTimes;

    Task NavigateNoParameter() => Navigation.PushAsync<NavigationTargetPage>();

    Task NavigateWithItem() => Navigation.PushAsync<NavigationTargetPage>(new()
                {
                    [nameof(NavigationTargetPage.Item)] = item
                });

    Task NavigateWithEvent() => Navigation.PushAsync<NavigationTargetPage>(new()
                {
                    [nameof(NavigationTargetPage.Item)] = item,
                    [nameof(NavigationTargetPage.EventHappened)] = EventCallback.Factory.Create(this, EventHappened)
                });

    Task NavigateToModal() => Navigation.PushModalAsync<NavigationTargetModalPage>(new()
                {
                    [nameof(NavigationTargetModalPage.Item)] = item
                });

    Task NavigateViaRenderFragment() => Navigation.PushAsync(
    @<NavigationTargetPage Item="item" EventHappened="EventHappened" />);

    Task NavigateViaRenderFragmentWithBind() => Navigation.PushAsync(
    @<NavigationTargetPage @bind-Item="item" />);

    Task NavigateToModalViaRenderFragment() => Navigation.PushModalAsync(
    @<NavigationTargetModalPage Item="item" />);

    void EventHappened() => eventHappenedTimes++;
}
