@page "/navigation"

@using ControlGallery.Models

@inject INavigation Navigation

<ContentControl Tag="Navigation">
    <ScrollViewer>
        <StackPanel Margin="6" Spacing="6">
            <Label>Passed item</Label>
            <Label>Name: @item.Name, Value: @item.Value</Label>

            @if (eventHappenedTimes > 0)
        {
            <Label>Event happened @eventHappenedTimes times!</Label>
        }

            <Button Text="Navigate with no parameters" OnClick="NavigateNoParameter" />
            <Button Text="Navigate with item passed" OnClick="NavigateWithItem" />
            <Button Text="Navigate with event handler" OnClick="NavigateWithEvent" />
            <Button Text="Navigate to modal" OnClick="NavigateToModal" />
            <Button Text="Navigate via markup parameter with event" OnClick="NavigateViaRenderFragment" />
            <Button Text="Navigate via markup parameter with binding" OnClick="NavigateViaRenderFragmentWithBind" />
            <Button Text="Navigate to modal via markup parameter" OnClick="NavigateToModalViaRenderFragment" />
        </StackPanel>
    </ScrollViewer>
</ContentControl>

@code {
NavigationParameterModel item = new("Firefly", "Serenity");
int eventHappenedTimes;

Task NavigateNoParameter() => Navigation.PushAsync<NavigationTargetPage>();

Task NavigateWithItem() => Navigation.PushAsync<NavigationTargetPage>(new()
        {
            [nameof(NavigationTargetPage.Item)] = item
        });

Task NavigateWithEvent() => Navigation.PushAsync<NavigationTargetPage>(new()
        {
            [nameof(NavigationTargetPage.Item)] = item,
            [nameof(NavigationTargetPage.EventHappened)] = EventCallback.Factory.Create(this, EventHappened)
        });

Task NavigateToModal() => Navigation.PushModalAsync<NavigationTargetModalPage>(new()
        {
            [nameof(NavigationTargetModalPage.Item)] = item
        });

Task NavigateViaRenderFragment() => Navigation.PushAsync(
    @<NavigationTargetPage Item="item" EventHappened="EventHappened" />);

Task NavigateViaRenderFragmentWithBind() => Navigation.PushAsync(
    @<NavigationTargetPage @bind-Item="item" />);

Task NavigateToModalViaRenderFragment() => Navigation.PushModalAsync(
    @<NavigationTargetModalPage Item="item" />);

void EventHappened() => eventHappenedTimes++;
}
